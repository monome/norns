top = '../..'


def options(opt):
    opt.load('compiler_c compiler_cxx')

def configure(conf):
    conf.load('compiler_c compiler_cxx')

def build(bld):
    crone_sources = [
        'src/main.cpp',
        'src/BufDiskWorker.cpp',
        'src/Commands.cpp',
        'src/MixerClient.cpp',
        'src/OscInterface.cpp',
        'src/SoftcutClient.cpp',
        'src/Taper.cpp',
        'src/Window.cpp',
        'softcut/softcut-lib/src/FadeCurves.cpp',
        'softcut/softcut-lib/src/ReadWriteHead.cpp',
        'softcut/softcut-lib/src/SubHead.cpp',
        'softcut/softcut-lib/src/Svf.cpp',
        'softcut/softcut-lib/src/Voice.cpp'
    ]

    crone_flags = [ '-std=c++14',
                    '-O3',
                    '-Wall',
                    '-DUSE_I2S_AUDIO'
                  ]

    if bld.env.NORNS_RELEASE:
        crone_flags += [ 
            '-mcpu=cortex-a53',
            '-mtune=cortex-a53',
            '-mfpu=neon-fp-armv8',
            '-mfloat-abi=hard',
            '-funconstrained-commons',
            '-ffast-math',
            '-fgcse-sm',
        ]

    bld.program( features='c cxx cxxprogram',
                 source=crone_sources,
                 target='crone',

                 includes=[
                     'src',
                     './',
                     'softcut/softcut-lib/include',
                     'lib/readerwriterqueue'
                 ],

                 use=[
                     'ALSA',
                     'LIBLO',
                 ],
                 lib=[
                     'atomic',
                     'jack',
                     'pthread',
                     'm',
                     'sndfile'
                 ],
                 cxxflags=crone_flags
                 )
